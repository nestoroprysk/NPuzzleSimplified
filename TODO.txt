1. Add inversion count heuristic [DONE]
2. Review code
3. Add result checker
4. Add unit tests
5. Add random tests runner
6. Add argc argv parser
7. Add usage
8. Add a few new containers
9. Add open-closed states logger
10. Add a measurement tool
11. Add a matrix parser
12. Delete exceptions after impl is done
13. use std::array instead of a matrix
14. Make template functions instead of IMatrix
15. Try templates in hpp files
16. Research better hash

Note:
- NPuzzle is a logic lib
- Runner is an argc argv app
- TestingFramework is a separate lib
- UnitTests are a separate app
- RandomTestsRunner is a separate app
- Generator is a script

Dependencies:
- Runner <- NPuzzle
- TestingFramework <- NPuzzle
- UnitTests <- TestingFramework + NPuzzle
- RandomTestsRunner <- Generator + TestingFramework

Mandatory:
7. test flags rigorously
8. test isSolvable() for 6x6

1. Parsing maps DONE
6. Enable bigger maps DONE
5. Random map generator DONE
3. Snake solution generator DONE
4. isSolvable() for even(N) DONE
2. Parsing argc/argv DONE
3. Time limit DONE
6. support run into file DONE
4. Test is solvable rigorously DONE
5. support generator run DONE
